name: build-wheels

on:
  push:
    tags:
    - 'v*'

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build-python-wheels:
    name: Build Python Wheels for ${{ matrix.os }}
    needs: create_release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        #os: [macos-latest, self-hosted-macos-arm64, ubuntu-latest, windows-latest]
        os: [macos-latest, ubuntu-latest, windows-latest, macos-m1-self-hosted, linux-armv7-self-hosted]
        include:
        - os: macos-latest
          ARCH: ''
          TARGET: macos-x64
        - os: macos-m1-self-hosted
          ARCH: '-arm64'
          TARGET: macos-arm64
        - os: linux-armv7-self-hosted
          ARCH: ''
          TARGET: linux-armv7
        - os: ubuntu-latest
          ARCH: ''
          TARGET: linux-amd64
        - os: windows-latest
          ARCH: ''
          TARGET: win64
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Python
        if: ${{ matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest' || matrix.os == 'windows-latest' }}
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Prepare download folder
        shell: pwsh
        run: mkdir download
      - name: Install build dependencies
        shell: pwsh
        run: python3 -m pip install wheel
      - name: Build wheels for IDF master
        shell: pwsh
        run: .\Build-Wheels.ps1  -Branch "master" -Arch "${{ matrix.ARCH }}" -CompileWheels @("greenlet==1.0.0", "gevent==1.5.0", "cryptography", "windows-curses")
      - name: Test wheels by installation
        shell: pwsh
        run: .\Test-Wheels.ps1 -Branch "master" -Arch "${{ matrix.ARCH }}"
      - name: Build wheels for IDF v4.2.2
        shell: pwsh
        run: .\Build-Wheels.ps1  -Branch "v4.2.2" -Arch "${{ matrix.ARCH }}" -CompileWheels @("greenlet==1.0.0", "gevent==1.5.0", "cryptography", "windows-curses")
      - name: Test wheels by installation
        shell: pwsh
        run: .\Test-Wheels.ps1 -Branch "v4.2.2" -Arch "${{ matrix.ARCH }}"
      - name: Build wheels for IDF v4.3
        shell: pwsh
        run: .\Build-Wheels.ps1  -Branch "v4.3" -Arch "${{ matrix.ARCH }}" -CompileWheels @("windows-curses")
      - name: Test wheels by installation
        shell: pwsh
        run: .\Test-Wheels.ps1 -Branch "v4.3" -Arch "${{ matrix.ARCH }}"
      - name: Write version of package to file
        shell: pwsh
        run: python3 -c  "print('3.8', file=open('download/version.txt', 'w'))"
      - name: Archive artifact
        shell: pwsh
        run: Compress-Archive -Path "download\*" -DestinationPath "idf-python-wheels.zip"
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./idf-python-wheels.zip
          asset_name: idf-python-wheels-3.8-${{ matrix.TARGET }}.zip
          asset_content_type: application/zip
