name: platforms-dispatches

on:
  schedule:
    - cron: '0 0 * * 0,3'
  workflow_dispatch:

env:
  GH_TOKEN : ${{ secrets.GITHUB_TOKEN }}

jobs:
  get-supported-versions:
    name: Get Supported Versions
    uses: ./.github/workflows/get-supported-versions.yml
    secrets: inherit

  build-wheels:
    needs: get-supported-versions
    name: Build for ${{ matrix.os }} (Python ${{matrix.python-version}})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners#standard-github-hosted-runners-for-public-repositories
          - windows-latest
          - ubuntu-latest
          - macos-13      # MacOS x86_64
          - macos-latest  # MacOS arm64 (M1)
          - ubuntu-24.04-arm
          - linux-armv7-self-hosted
        include:
          - os: linux-armv7-self-hosted
            CONTAINER: python:${{ needs.get-supported-versions.outputs.oldest_supported_python }}-bullseye
        python-version: ['${{ needs.get-supported-versions.outputs.oldest_supported_python }}']

    # Use python container on ARM
    container: ${{ matrix.CONTAINER }}

    steps:
      - name: OS info
        if: matrix.os != 'windows-latest'
        run: |
          echo "Operating System: ${{ runner.os }}"
          echo "Architecture: $(uname -m)"
      - name: OS info
        if: matrix.os == 'windows-latest'
        run: |
          echo "Operating System: ${{ runner.os }}"
          echo "Architecture: $env:PROCESSOR_ARCHITECTURE"


      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set IDF version environment variables
        run: |
          echo "MIN_IDF_MAJOR_VERSION=${{ needs.get-supported-versions.outputs.min_idf_major_version }}" >> $GITHUB_ENV
          echo "MIN_IDF_MINOR_VERSION=${{ needs.get-supported-versions.outputs.min_idf_minor_version }}" >> $GITHUB_ENV
          echo "Setting MIN_IDF_MAJOR_VERSION=${{ needs.get-supported-versions.outputs.min_idf_major_version }}, MIN_IDF_MINOR_VERSION=${{ needs.get-supported-versions.outputs.min_idf_minor_version }}"

      - name: Setup Python
        # Skip setting python on ARM because of missing compatibility: https://github.com/actions/setup-python/issues/108
        if: matrix.os != 'linux-armv7-self-hosted'
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}


      - name: Get Python version
        run: |
          python --version
          python -m pip install --upgrade pip setuptools setuptools-scm
          pip show pip setuptools setuptools-scm


      - name: Install build dependencies
        run: python -m pip install -r build_requirements.txt


      - name: Install additional OS dependencies - Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: os_dependencies/ubuntu.sh

      - name: Install additional OS dependencies - MacOS
        if: matrix.os == 'macos-latest' || matrix.os == 'macos-13'
        run: os_dependencies/macos.sh

      - name: Install additional OS dependencies - Linux ARM
        if: matrix.os == 'linux-armv7-self-hosted' || matrix.os == 'ubuntu-24.04-arm'
        run: os_dependencies/linux_arm.sh

      - name: Install additional OS dependencies - Windows
        if: matrix.os == 'windows-latest'
        run: powershell -ExecutionPolicy Bypass -File os_dependencies/windows.ps1


      - name: Build wheels for IDF
        if: matrix.os != 'windows-latest'
        run: |
          # Rust directory needs to be included for Linux ARM7
          if [ "${{ matrix.os }}" = "linux-armv7-self-hosted" ]; then
            . $HOME/.cargo/env
          fi

          python build_wheels.py

      - name: Build wheels for IDF - Windows
        if: matrix.os == 'windows-latest'
        run: |
          python build_wheels.py

      - name: Upload artifacts of downloaded_wheels directory
        uses: actions/upload-artifact@v4
        with:
          name: wheels-download-directory-${{ matrix.os}}-${{ matrix.python-version }}
          path: ./downloaded_wheels

      - name: Upload artifacts of Python version dependent wheels
        uses: actions/upload-artifact@v4
        with:
          name: dependent_requirements_${{ matrix.os}}
          path: ./dependent_requirements.txt


  build-python-version-dependent-wheels:
    needs: [get-supported-versions, build-wheels]
    name: Build Python version dependendent wheels for IDF
    uses: ./.github/workflows/build-wheels-python-dependent.yml
    with:
      supported_python_versions: ${{ needs.get-supported-versions.outputs.supported_python }}
      oldest_supported_python: ${{ needs.get-supported-versions.outputs.oldest_supported_python }}

  # TODO Uncomment this when we are ready to upload the wheels
  #upload-python-wheels:
  #  needs: [build-wheels, build-python-version-dependent-wheels]
  #  name: Upload Python wheels
  #  uses: ./.github/workflows/upload-python-wheels.yml
  #  secrets: inherit
