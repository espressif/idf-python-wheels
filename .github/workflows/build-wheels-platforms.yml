name: platforms-dispatches

on:
  schedule:
    - cron: '0 0 * * 0,3'
  workflow_dispatch:
env:
  MIN_IDF_MAJOR_VERSION: ${{ vars.MIN_IDF_MAJOR_VERSION }}
  MIN_IDF_MINOR_VERSION: ${{ vars.MIN_IDF_MINOR_VERSION }}
  GH_TOKEN : ${{ secrets.GITHUB_TOKEN }}
jobs:
  build-wheels:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
          - ubuntu-24.04-arm   # GitHub-hosted ARM64 runner (public-preview)
          - macos-13      # MacOS x86_64
          - macos-latest  # MacOS arm64 (M1)
        python-version: ['3.8']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip and install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install cibuildwheel

      - name: Install build dependencies
        run: python -m pip install -r build_requirements.txt

      - name: Install additional OS dependencies - Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: os_dependencies/ubuntu.sh

      - name: Install additional OS dependencies - MacOS
        if: matrix.os == 'macos-latest' || matrix.os == 'macos-13'
        run: os_dependencies/macos.sh

      - name: Install additional OS dependencies - Linux ARM64
        if: matrix.os == 'ubuntu-24.04-arm'
        run: os_dependencies/linux_arm.sh

      - name: Build wheels with cibuildwheel
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - name: Upload artifacts of downloaded_wheels directory
        uses: actions/upload-artifact@v4
        with:
          name: wheels-download-directory-${{ matrix.os}}-${{ matrix.python-version }}
          path: ./downloaded_wheels

      - name: Upload artifacts of Python version dependent wheels
        uses: actions/upload-artifact@v4
        with:
          name: dependent_requirements_${{ matrix.os}}
          path: ./dependent_requirements.txt

  build-armv7:
    name: Build for ARMv7 with QEMU
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Upgrade pip and install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install cibuildwheel

      - name: Install additional OS dependencies - Linux ARM
        run: os_dependencies/linux_arm.sh

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Build ARMv7 wheels with cibuildwheel
        run: |
          . $HOME/.cargo/env
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ARCHS_LINUX: "armv7l"
          CIBW_BUILD: "py3-*"
          CIBW_SKIP: "*-musllinux_*"

      - name: Upload ARMv7 wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-armv7
          path: wheelhouse/*.whl

  # build-python-version-dependent-wheels:
  #   needs: build-wheels
  #   name: Build Python version dependent wheels for IDF
  #   uses: espressif/idf-python-wheels/.github/workflows/build-wheels-python-dependent.yml@main

  # upload-python-wheels:
  #   needs: [build-wheels, build-python-version-dependent-wheels]
  #   name: Upload Python wheels
  #   uses: espressif/idf-python-wheels/.github/workflows/upload-python-wheels.yml@main
  #   secrets: inherit
