name: defined-wheels
on:
  workflow_dispatch:
    inputs:
      packages:
        description: >
          Generate wheels for given packages separated by space.
          Requirement specifiers and markers can be used.
          For example esptool~=4.5 esp-coredump~=1.2;sys_platform!='win32'
        type: string
        required: true

      os_ubuntu_latest:
        description: Build on ubuntu-latest(x86_64)
        type: boolean
        required: false
        default: true
      os_windows_latest:
        description: Build on windows-latest(x86_64)
        type: boolean
        required: false
        default: true
      os_macos_latest:
        description: Build on macos-latest(x86_64)
        type: boolean
        required: false
        default: true
      os_macos_arm64:
        description: Build on macos M1(aarch64)
        type: boolean
        required: false
        default: true
      os_linux_armv7:
        description: Build on linux armv7(aarch32)
        type: boolean
        required: false
        default: true
      os_linux_arm64:
        description: Build on linux arm64(aarch64)
        type: boolean
        required: false
        default: true

jobs:
  ubuntu-latest:
    name: linux x86_64
    if: ${{ inputs.os_ubuntu_latest }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version}}

      - name: Get Python version
        run: |
          python --version
          python -m pip install --upgrade pip

      - name: Install build dependencies
        run: python -m pip install -r build_requirements.txt

      - name: Install additional OS dependencies - Ubuntu
        run: os_dependencies/ubuntu.sh

      - name: Build wheels
        run: |
          python build_wheels_from_file.py --requirements ${{ inputs.packages }}

      - name: Upload artifacts of downloaded_wheels directory
        uses: actions/upload-artifact@v4
        with:
          name: wheels-download-directory-ubuntu-${{ matrix.python-version }}
          path: ./downloaded_wheels


  windows-latest:
    name: windows x86_64
    if: ${{ inputs.os_windows_latest }}
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version}}

      - name: Get Python version
        run: |
          python --version
          python -m pip install --upgrade pip

      - name: Install build dependencies
        run: python -m pip install -r build_requirements.txt

      - name: Build wheels
        run: |
          python build_wheels_from_file.py --requirements ${{ inputs.packages }}

      - name: Upload artifacts of downloaded_wheels directory
        uses: actions/upload-artifact@v4
        with:
          name: wheels-download-directory-windows-${{ matrix.python-version }}
          path: ./downloaded_wheels


  macos-latest:
    name: macos x86_64
    if: ${{ inputs.os_macos_latest }}
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version}}

      - name: Get Python version
        run: |
          python --version
          python -m pip install --upgrade pip

      - name: Install build dependencies
        run: python -m pip install -r build_requirements.txt

      - name: Install additional OS dependencies - MacOS
        run: os_dependencies/macos.sh

      - name: Build wheels
        run: |
          python build_wheels_from_file.py --requirements ${{ inputs.packages }}

      - name: Upload artifacts of downloaded_wheels directory
        uses: actions/upload-artifact@v4
        with:
          name: wheels-download-directory-macos-x86-${{ matrix.python-version }}
          path: ./downloaded_wheels


  macos-m1:
    name: macos arm64
    if: ${{ inputs.os_macos_arm64 }}
    runs-on: macos-latest-xlarge       # MacOS M1 GitHub beta runner - paid $0.16
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python - MacOS M1
        # Temporary solution until Python version for build will be >= 3.10 (GitHub action support)
        run: |
          brew install python@${{ matrix.python_version }}
          # change python symlink called with default command 'python'
          ln -s -f /opt/homebrew/bin/python${{ matrix.python_version }} /usr/local/bin/python

      - name: Get Python version
        run: |
          python --version
          python -m pip install --upgrade pip

      - name: Install build dependencies
        run: python -m pip install -r build_requirements.txt

      - name: Install additional OS dependencies - MacOS
        run: os_dependencies/macos.sh

      - name: Build wheels
        run: |
          python build_wheels_from_file.py --requirements ${{ inputs.packages }}

      - name: Upload artifacts of downloaded_wheels directory
        uses: actions/upload-artifact@v4
        with:
          name: wheels-download-directory-macos-arm64-${{ matrix.python-version }}
          path: ./downloaded_wheels


  linux-armv7:
    name: linux aarch32 (armv7)
    if: ${{ inputs.os_linux_armv7 }}
    runs-on: linux-armv7-self-hosted
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version}}

      - name: Get Python version
        run: |
          python --version
          python -m pip install --upgrade pip

      - name: Install build dependencies
        run: python -m pip install -r build_requirements.txt

      - name: Install additional OS dependencies - Linux ARM
        run: os_dependencies/linux_arm.sh

      - name: Build wheels
        run: |
          # Rust directory needs to be included for Linux ARM7
          . $HOME/.cargo/env

          python build_wheels_from_file.py --requirements ${{ inputs.packages }}

      - name: Upload artifacts of downloaded_wheels directory
        uses: actions/upload-artifact@v4
        with:
          name: wheels-download-directory-linux-arm7-${{ matrix.python-version }}
          path: ./downloaded_wheels


  linux-arm64:
    name: linux aarch64 (arm64)
    if: ${{ inputs.os_linux_arm64 }}
    runs-on: linux-arm64-self-hosted
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version}}

      - name: Get Python version
        run: |
          python --version
          python -m pip install --upgrade pip

      - name: Install build dependencies
        run: python -m pip install -r build_requirements.txt

      - name: Install additional OS dependencies - Linux ARM
        run: os_dependencies/linux_arm.sh

      - name: Build wheels
        run: |
          python build_wheels_from_file.py --requirements ${{ inputs.packages }}

      - name: Upload artifacts of downloaded_wheels directory
        uses: actions/upload-artifact@v4
        with:
          name: wheels-download-directory-linux-arm64-${{ matrix.python-version }}
          path: ./downloaded_wheels


  upload-python-wheels:
    needs: [ubuntu-latest, windows-latest, macos-latest, macos-m1, linux-armv7, linux-arm64]
    name: Upload Python wheels
    uses: espressif/idf-python-wheels/.github/workflows/upload-python-wheels.yml@feat/python_version_specific_wheels
    # TODO right branch to ref
